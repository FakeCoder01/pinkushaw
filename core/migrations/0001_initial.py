# Generated by Django 4.1.2 on 2023-05-28 06:18

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lat', models.FloatField(blank=True, null=True)),
                ('lng', models.FloatField(blank=True, null=True)),
                ('address', models.CharField(blank=True, max_length=150, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('country', models.CharField(blank=True, max_length=32, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Preference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender_preference', models.CharField(blank=True, max_length=8, null=True)),
                ('min_age_preference', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('max_age_preference', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('dating_radius', models.FloatField(blank=True, null=True)),
                ('here_for', models.CharField(blank=True, max_length=8, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.UUIDField(default=uuid.UUID('d9ba7daa-a52a-4a92-be98-cc8787a046b0'), primary_key=True, serialize=False, unique=True)),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='static/user/dp/')),
                ('name', models.CharField(blank=True, max_length=40, null=True)),
                ('gender', models.CharField(blank=True, max_length=8, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('age', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('location', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='userloc', to='core.location')),
                ('preference', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='userpref', to='core.preference')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fav_song', models.CharField(blank=True, max_length=100, null=True)),
                ('fav_song_link', models.URLField(blank=True, null=True)),
                ('zodiac_sign', models.CharField(blank=True, max_length=16, null=True)),
                ('drinking', models.CharField(blank=True, max_length=8, null=True)),
                ('smoking', models.BooleanField(blank=True, default=False, null=True)),
                ('religion', models.CharField(blank=True, max_length=10, null=True)),
                ('languages', models.CharField(blank=True, max_length=32, null=True)),
                ('height', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('body_type', models.CharField(blank=True, max_length=8, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('icon', models.ImageField(blank=True, null=True, upload_to='static/tags/icons/')),
                ('name', models.CharField(max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='RightSwipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userlike', to='core.profile')),
                ('whom_liked', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='liked', to='core.profile')),
            ],
        ),
        migrations.CreateModel(
            name='ProfileImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('caption', models.CharField(blank=True, max_length=50, null=True)),
                ('image', models.ImageField(upload_to='static/user/images/')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userimg', to='core.profile')),
            ],
        ),
        migrations.AddField(
            model_name='profile',
            name='question',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='userques', to='core.question'),
        ),
        migrations.AddField(
            model_name='profile',
            name='tags',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.tag'),
        ),
        migrations.AddField(
            model_name='profile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='userprofile', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='OTPVerify',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_email_verified', models.BooleanField(default=False)),
                ('email_otp', models.CharField(blank=True, max_length=200, null=True)),
                ('email_otp_creation', models.DateTimeField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='userotp', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.UUIDField(default=uuid.UUID('0b76d4f8-55b5-4104-8216-3edcc63e64dc'), primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('first_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='f_user', to='core.profile')),
                ('second_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='s_user', to='core.profile')),
            ],
        ),
        migrations.CreateModel(
            name='LeftSwipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disliked_users', models.ManyToManyField(to='core.profile')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='userdislike', to='core.profile')),
            ],
        ),
    ]
